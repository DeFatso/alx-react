{"ast":null,"code":"import _defineProperty from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n// https://stackoverflow.com/a/19709846/308237 plus data: scheme\n// split into 2 code paths as URL constructor does not support protocol-relative urls\nvar absoluteUrlRX = new RegExp('^[a-z]+://|^data:', 'i');\nvar protocolRelativeUrlRX = new RegExp('^//', 'i');\nvar headersToArray = function headersToArray(headers) {\n  // node-fetch 1 Headers\n  if (typeof headers.raw === 'function') {\n    return Object.entries(headers.raw());\n  }\n  if (headers[Symbol.iterator]) {\n    return _toConsumableArray(headers);\n  }\n  return Object.entries(headers);\n};\nvar zipObject = function zipObject(entries) {\n  return entries.reduce(function (obj, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      val = _ref2[1];\n    return Object.assign(obj, _defineProperty({}, key, val));\n  }, {});\n};\nexport function normalizeUrl(url) {\n  if (typeof url === 'function' || url instanceof RegExp || /^(begin|end|glob|express|path)\\:/.test(url)) {\n    return url;\n  }\n  if (absoluteUrlRX.test(url)) {\n    var _u = new URL(url);\n    return _u.href;\n  }\n  if (protocolRelativeUrlRX.test(url)) {\n    var _u2 = new URL(url, 'http://dummy');\n    return _u2.href;\n  }\n  var u = new URL(url, 'http://dummy');\n  return u.pathname + u.search;\n}\nexport function normalizeRequest(url, options, Request) {\n  if (Request.prototype.isPrototypeOf(url)) {\n    var derivedOptions = {\n      method: url.method\n    };\n    try {\n      derivedOptions.body = url.clone().text();\n    } catch (err) {}\n    var normalizedRequestObject = {\n      url: normalizeUrl(url.url),\n      options: Object.assign(derivedOptions, options),\n      request: url,\n      signal: options && options.signal || url.signal\n    };\n    var _headers = headersToArray(url.headers);\n    if (_headers.length) {\n      normalizedRequestObject.options.headers = zipObject(_headers);\n    }\n    return normalizedRequestObject;\n  }\n  if (typeof url === 'string' || url instanceof String ||\n  // horrible URL object duck-typing\n  typeof url === 'object' && 'href' in url) {\n    return {\n      url: normalizeUrl(url),\n      options: options,\n      signal: options && options.signal\n    };\n  }\n  if (typeof url === 'object') {\n    throw new TypeError('fetch-mock: Unrecognised Request object. Read the Config and Installation sections of the docs');\n  } else {\n    throw new TypeError('fetch-mock: Invalid arguments passed to fetch');\n  }\n}\nexport function getPath(url) {\n  var u = absoluteUrlRX.test(url) ? new URL(url) : new URL(url, 'http://dummy');\n  return u.pathname;\n}\nexport function getQuery(url) {\n  var u = absoluteUrlRX.test(url) ? new URL(url) : new URL(url, 'http://dummy');\n  return u.search ? u.search.substr(1) : '';\n}\nexport var headers = {\n  normalize: function normalize(headers) {\n    return zipObject(headersToArray(headers));\n  },\n  toLowerCase: function toLowerCase(headers) {\n    return Object.keys(headers).reduce(function (obj, k) {\n      obj[k.toLowerCase()] = headers[k];\n      return obj;\n    }, {});\n  },\n  equal: function equal(actualHeader, expectedHeader) {\n    actualHeader = Array.isArray(actualHeader) ? actualHeader : [actualHeader];\n    expectedHeader = Array.isArray(expectedHeader) ? expectedHeader : [expectedHeader];\n    if (actualHeader.length !== expectedHeader.length) {\n      return false;\n    }\n    return actualHeader.every(function (val, i) {\n      return val === expectedHeader[i];\n    });\n  }\n};","map":{"version":3,"names":["absoluteUrlRX","RegExp","protocolRelativeUrlRX","headersToArray","headers","raw","Object","entries","Symbol","iterator","_toConsumableArray","zipObject","reduce","obj","_ref","_ref2","_slicedToArray","key","val","assign","_defineProperty","normalizeUrl","url","test","u","URL","href","pathname","search","normalizeRequest","options","Request","prototype","isPrototypeOf","derivedOptions","method","body","clone","text","err","normalizedRequestObject","request","signal","length","String","TypeError","getPath","getQuery","substr","normalize","toLowerCase","keys","k","equal","actualHeader","expectedHeader","Array","isArray","every","i"],"sources":["/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/node_modules/fetch-mock/src/lib/request-utils.js"],"sourcesContent":["// https://stackoverflow.com/a/19709846/308237 plus data: scheme\n// split into 2 code paths as URL constructor does not support protocol-relative urls\nconst absoluteUrlRX = new RegExp('^[a-z]+://|^data:', 'i');\nconst protocolRelativeUrlRX = new RegExp('^//', 'i');\n\nconst headersToArray = (headers) => {\n\t// node-fetch 1 Headers\n\tif (typeof headers.raw === 'function') {\n\t\treturn Object.entries(headers.raw());\n\t}\n\tif (headers[Symbol.iterator]) {\n\t\treturn [...headers];\n\t}\n\treturn Object.entries(headers);\n};\n\nconst zipObject = (entries) =>\n\tentries.reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\n\nexport function normalizeUrl(url) {\n\tif (\n\t\ttypeof url === 'function' ||\n\t\turl instanceof RegExp ||\n\t\t/^(begin|end|glob|express|path)\\:/.test(url)\n\t) {\n\t\treturn url;\n\t}\n\tif (absoluteUrlRX.test(url)) {\n\t\tconst u = new URL(url);\n\t\treturn u.href;\n\t}\n\tif (protocolRelativeUrlRX.test(url)) {\n\t\tconst u = new URL(url, 'http://dummy');\n\t\treturn u.href;\n\t}\n\tconst u = new URL(url, 'http://dummy');\n\treturn u.pathname + u.search;\n}\n\nexport function normalizeRequest(url, options, Request) {\n\tif (Request.prototype.isPrototypeOf(url)) {\n\t\tconst derivedOptions = {\n\t\t\tmethod: url.method,\n\t\t};\n\n\t\ttry {\n\t\t\tderivedOptions.body = url.clone().text();\n\t\t} catch (err) {}\n\n\t\tconst normalizedRequestObject = {\n\t\t\turl: normalizeUrl(url.url),\n\t\t\toptions: Object.assign(derivedOptions, options),\n\t\t\trequest: url,\n\t\t\tsignal: (options && options.signal) || url.signal,\n\t\t};\n\n\t\tconst headers = headersToArray(url.headers);\n\n\t\tif (headers.length) {\n\t\t\tnormalizedRequestObject.options.headers = zipObject(headers);\n\t\t}\n\t\treturn normalizedRequestObject;\n\t}\n\tif (\n\t\ttypeof url === 'string' ||\n\t\turl instanceof String ||\n\t\t// horrible URL object duck-typing\n\t\t(typeof url === 'object' && 'href' in url)\n\t) {\n\t\treturn {\n\t\t\turl: normalizeUrl(url),\n\t\t\toptions,\n\t\t\tsignal: options && options.signal,\n\t\t};\n\t}\n\tif (typeof url === 'object') {\n\t\tthrow new TypeError(\n\t\t\t'fetch-mock: Unrecognised Request object. Read the Config and Installation sections of the docs',\n\t\t);\n\t} else {\n\t\tthrow new TypeError('fetch-mock: Invalid arguments passed to fetch');\n\t}\n}\n\nexport function getPath(url) {\n\tconst u = absoluteUrlRX.test(url)\n\t\t? new URL(url)\n\t\t: new URL(url, 'http://dummy');\n\treturn u.pathname;\n}\n\nexport function getQuery(url) {\n\tconst u = absoluteUrlRX.test(url)\n\t\t? new URL(url)\n\t\t: new URL(url, 'http://dummy');\n\treturn u.search ? u.search.substr(1) : '';\n}\n\nexport const headers = {\n\tnormalize: (headers) => zipObject(headersToArray(headers)),\n\ttoLowerCase: (headers) =>\n\t\tObject.keys(headers).reduce((obj, k) => {\n\t\t\tobj[k.toLowerCase()] = headers[k];\n\t\t\treturn obj;\n\t\t}, {}),\n\tequal: (actualHeader, expectedHeader) => {\n\t\tactualHeader = Array.isArray(actualHeader) ? actualHeader : [actualHeader];\n\t\texpectedHeader = Array.isArray(expectedHeader)\n\t\t\t? expectedHeader\n\t\t\t: [expectedHeader];\n\n\t\tif (actualHeader.length !== expectedHeader.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn actualHeader.every((val, i) => val === expectedHeader[i]);\n\t},\n};\n"],"mappings":";;;AAAA;AACA;AACA,IAAMA,aAAa,GAAG,IAAIC,MAAM,CAAC,mBAAmB,EAAE,GAAG,CAAC;AAC1D,IAAMC,qBAAqB,GAAG,IAAID,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;AAEpD,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAK;EACnC;EACA,IAAI,OAAOA,OAAO,CAACC,GAAG,KAAK,UAAU,EAAE;IACtC,OAAOC,MAAM,CAACC,OAAO,CAACH,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EACrC;EACA,IAAID,OAAO,CAACI,MAAM,CAACC,QAAQ,CAAC,EAAE;IAC7B,OAAAC,kBAAA,CAAWN,OAAO;EACnB;EACA,OAAOE,MAAM,CAACC,OAAO,CAACH,OAAO,CAAC;AAC/B,CAAC;AAED,IAAMO,SAAS,GAAG,SAAZA,SAASA,CAAIJ,OAAO;EAAA,OACzBA,OAAO,CAACK,MAAM,CAAC,UAACC,GAAG,EAAAC,IAAA;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAGG,GAAG,GAAAF,KAAA;MAAEG,GAAG,GAAAH,KAAA;IAAA,OAAMT,MAAM,CAACa,MAAM,CAACN,GAAG,EAAAO,eAAA,KAAKH,GAAG,EAAGC,GAAG,CAAE,CAAC;EAAA,GAAE,CAAC,CAAC,CAAC;AAAA;AAE5E,OAAO,SAASG,YAAYA,CAACC,GAAG,EAAE;EACjC,IACC,OAAOA,GAAG,KAAK,UAAU,IACzBA,GAAG,YAAYrB,MAAM,IACrB,kCAAkC,CAACsB,IAAI,CAACD,GAAG,CAAC,EAC3C;IACD,OAAOA,GAAG;EACX;EACA,IAAItB,aAAa,CAACuB,IAAI,CAACD,GAAG,CAAC,EAAE;IAC5B,IAAME,EAAC,GAAG,IAAIC,GAAG,CAACH,GAAG,CAAC;IACtB,OAAOE,EAAC,CAACE,IAAI;EACd;EACA,IAAIxB,qBAAqB,CAACqB,IAAI,CAACD,GAAG,CAAC,EAAE;IACpC,IAAME,GAAC,GAAG,IAAIC,GAAG,CAACH,GAAG,EAAE,cAAc,CAAC;IACtC,OAAOE,GAAC,CAACE,IAAI;EACd;EACA,IAAMF,CAAC,GAAG,IAAIC,GAAG,CAACH,GAAG,EAAE,cAAc,CAAC;EACtC,OAAOE,CAAC,CAACG,QAAQ,GAAGH,CAAC,CAACI,MAAM;AAC7B;AAEA,OAAO,SAASC,gBAAgBA,CAACP,GAAG,EAAEQ,OAAO,EAAEC,OAAO,EAAE;EACvD,IAAIA,OAAO,CAACC,SAAS,CAACC,aAAa,CAACX,GAAG,CAAC,EAAE;IACzC,IAAMY,cAAc,GAAG;MACtBC,MAAM,EAAEb,GAAG,CAACa;IACb,CAAC;IAED,IAAI;MACHD,cAAc,CAACE,IAAI,GAAGd,GAAG,CAACe,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;IAEf,IAAMC,uBAAuB,GAAG;MAC/BlB,GAAG,EAAED,YAAY,CAACC,GAAG,CAACA,GAAG,CAAC;MAC1BQ,OAAO,EAAExB,MAAM,CAACa,MAAM,CAACe,cAAc,EAAEJ,OAAO,CAAC;MAC/CW,OAAO,EAAEnB,GAAG;MACZoB,MAAM,EAAGZ,OAAO,IAAIA,OAAO,CAACY,MAAM,IAAKpB,GAAG,CAACoB;IAC5C,CAAC;IAED,IAAMtC,QAAO,GAAGD,cAAc,CAACmB,GAAG,CAAClB,OAAO,CAAC;IAE3C,IAAIA,QAAO,CAACuC,MAAM,EAAE;MACnBH,uBAAuB,CAACV,OAAO,CAAC1B,OAAO,GAAGO,SAAS,CAACP,QAAO,CAAC;IAC7D;IACA,OAAOoC,uBAAuB;EAC/B;EACA,IACC,OAAOlB,GAAG,KAAK,QAAQ,IACvBA,GAAG,YAAYsB,MAAM;EACrB;EACC,OAAOtB,GAAG,KAAK,QAAQ,IAAI,MAAM,IAAIA,GAAI,EACzC;IACD,OAAO;MACNA,GAAG,EAAED,YAAY,CAACC,GAAG,CAAC;MACtBQ,OAAO,EAAPA,OAAO;MACPY,MAAM,EAAEZ,OAAO,IAAIA,OAAO,CAACY;IAC5B,CAAC;EACF;EACA,IAAI,OAAOpB,GAAG,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIuB,SAAS,CAClB,gGACD,CAAC;EACF,CAAC,MAAM;IACN,MAAM,IAAIA,SAAS,CAAC,+CAA+C,CAAC;EACrE;AACD;AAEA,OAAO,SAASC,OAAOA,CAACxB,GAAG,EAAE;EAC5B,IAAME,CAAC,GAAGxB,aAAa,CAACuB,IAAI,CAACD,GAAG,CAAC,GAC9B,IAAIG,GAAG,CAACH,GAAG,CAAC,GACZ,IAAIG,GAAG,CAACH,GAAG,EAAE,cAAc,CAAC;EAC/B,OAAOE,CAAC,CAACG,QAAQ;AAClB;AAEA,OAAO,SAASoB,QAAQA,CAACzB,GAAG,EAAE;EAC7B,IAAME,CAAC,GAAGxB,aAAa,CAACuB,IAAI,CAACD,GAAG,CAAC,GAC9B,IAAIG,GAAG,CAACH,GAAG,CAAC,GACZ,IAAIG,GAAG,CAACH,GAAG,EAAE,cAAc,CAAC;EAC/B,OAAOE,CAAC,CAACI,MAAM,GAAGJ,CAAC,CAACI,MAAM,CAACoB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;AAC1C;AAEA,OAAO,IAAM5C,OAAO,GAAG;EACtB6C,SAAS,EAAE,SAAAA,UAAC7C,OAAO;IAAA,OAAKO,SAAS,CAACR,cAAc,CAACC,OAAO,CAAC,CAAC;EAAA;EAC1D8C,WAAW,EAAE,SAAAA,YAAC9C,OAAO;IAAA,OACpBE,MAAM,CAAC6C,IAAI,CAAC/C,OAAO,CAAC,CAACQ,MAAM,CAAC,UAACC,GAAG,EAAEuC,CAAC,EAAK;MACvCvC,GAAG,CAACuC,CAAC,CAACF,WAAW,CAAC,CAAC,CAAC,GAAG9C,OAAO,CAACgD,CAAC,CAAC;MACjC,OAAOvC,GAAG;IACX,CAAC,EAAE,CAAC,CAAC,CAAC;EAAA;EACPwC,KAAK,EAAE,SAAAA,MAACC,YAAY,EAAEC,cAAc,EAAK;IACxCD,YAAY,GAAGE,KAAK,CAACC,OAAO,CAACH,YAAY,CAAC,GAAGA,YAAY,GAAG,CAACA,YAAY,CAAC;IAC1EC,cAAc,GAAGC,KAAK,CAACC,OAAO,CAACF,cAAc,CAAC,GAC3CA,cAAc,GACd,CAACA,cAAc,CAAC;IAEnB,IAAID,YAAY,CAACX,MAAM,KAAKY,cAAc,CAACZ,MAAM,EAAE;MAClD,OAAO,KAAK;IACb;IAEA,OAAOW,YAAY,CAACI,KAAK,CAAC,UAACxC,GAAG,EAAEyC,CAAC;MAAA,OAAKzC,GAAG,KAAKqC,cAAc,CAACI,CAAC,CAAC;IAAA,EAAC;EACjE;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}