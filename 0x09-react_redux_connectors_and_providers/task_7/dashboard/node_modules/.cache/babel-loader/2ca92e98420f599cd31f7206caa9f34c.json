{"ast":null,"code":"import { Map } from \"immutable\";\nimport { LOGIN, LOGOUT, DISPLAY_NOTIFICATION_DRAWER, LOGIN_SUCCESS, LOGIN_FAILURE, HIDE_NOTIFICATION_DRAWER } from '../actions/uiActionTypes';\nexport var initialState = Map({\n  isNotificationDrawerVisible: false,\n  isUserLoggedIn: false,\n  user: {}\n});\nexport function uiReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DISPLAY_NOTIFICATION_DRAWER:\n      return state.set(\"isNotificationDrawerVisible\", true);\n    case HIDE_NOTIFICATION_DRAWER:\n      return state.set(\"isNotificationDrawerVisible\", false);\n    case LOGIN:\n      return state.set(\"user\", action.user);\n    case LOGIN_SUCCESS:\n      return state.set(\"isUserLoggedIn\", true);\n    case LOGIN_FAILURE:\n      return state.set(\"isUserLoggedIn\", false);\n    case LOGOUT:\n      {\n        return state.withMutations(function (state) {\n          return state.set(\"isUserLoggedIn\", false).set(\"user\", null);\n        });\n      }\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["Map","LOGIN","LOGOUT","DISPLAY_NOTIFICATION_DRAWER","LOGIN_SUCCESS","LOGIN_FAILURE","HIDE_NOTIFICATION_DRAWER","initialState","isNotificationDrawerVisible","isUserLoggedIn","user","uiReducer","state","arguments","length","undefined","action","type","set","withMutations"],"sources":["/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/src/reducers/uiReducer.js"],"sourcesContent":["import { Map } from \"immutable\";\nimport { LOGIN, LOGOUT, DISPLAY_NOTIFICATION_DRAWER, LOGIN_SUCCESS, LOGIN_FAILURE, HIDE_NOTIFICATION_DRAWER } from '../actions/uiActionTypes'\n\n\nexport const initialState = Map({\n  isNotificationDrawerVisible: false,\n  isUserLoggedIn: false,\n  user: {}\n})\n\nexport function uiReducer(state = initialState, action) {\n  switch(action.type){\n    case DISPLAY_NOTIFICATION_DRAWER:\n      return state.set(\"isNotificationDrawerVisible\", true)\n    case HIDE_NOTIFICATION_DRAWER:\n      return state.set(\"isNotificationDrawerVisible\", false)\n    case LOGIN:\n      return state.set(\"user\", action.user)\n    case LOGIN_SUCCESS:\n      return state.set(\"isUserLoggedIn\", true)\n    case LOGIN_FAILURE:\n      return state.set(\"isUserLoggedIn\", false)\n    case LOGOUT: {\n      return state.withMutations((state)=>state.set(\"isUserLoggedIn\", false).set(\"user\", null))\n    }\n    default:\n      return state\n  }\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,WAAW;AAC/B,SAASC,KAAK,EAAEC,MAAM,EAAEC,2BAA2B,EAAEC,aAAa,EAAEC,aAAa,EAAEC,wBAAwB,QAAQ,0BAA0B;AAG7I,OAAO,IAAMC,YAAY,GAAGP,GAAG,CAAC;EAC9BQ,2BAA2B,EAAE,KAAK;EAClCC,cAAc,EAAE,KAAK;EACrBC,IAAI,EAAE,CAAC;AACT,CAAC,CAAC;AAEF,OAAO,SAASC,SAASA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAOC,MAAM,CAACC,IAAI;IAChB,KAAKd,2BAA2B;MAC9B,OAAOS,KAAK,CAACM,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC;IACvD,KAAKZ,wBAAwB;MAC3B,OAAOM,KAAK,CAACM,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC;IACxD,KAAKjB,KAAK;MACR,OAAOW,KAAK,CAACM,GAAG,CAAC,MAAM,EAAEF,MAAM,CAACN,IAAI,CAAC;IACvC,KAAKN,aAAa;MAChB,OAAOQ,KAAK,CAACM,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC;IAC1C,KAAKb,aAAa;MAChB,OAAOO,KAAK,CAACM,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC;IAC3C,KAAKhB,MAAM;MAAE;QACX,OAAOU,KAAK,CAACO,aAAa,CAAC,UAACP,KAAK;UAAA,OAAGA,KAAK,CAACM,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAACA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;QAAA,EAAC;MAC3F;IACA;MACE,OAAON,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}