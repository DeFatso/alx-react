{"ast":null,"code":"import _objectSpread from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { debug } from './debug.js';\nimport setUpAndTearDown from './set-up-and-tear-down.js';\nimport fetchHandler from './fetch-handler.js';\nimport inspecting from './inspecting.js';\nimport Route from '../Route/index.js';\nvar FetchMock = _objectSpread(_objectSpread(_objectSpread({}, fetchHandler), setUpAndTearDown), inspecting);\nFetchMock.addMatcher = function (matcher) {\n  Route.addMatcher(matcher);\n};\nFetchMock.config = {\n  fallbackToNetwork: false,\n  includeContentLength: true,\n  sendAsJson: true,\n  warnOnFallback: true,\n  overwriteRoutes: undefined\n};\nFetchMock.createInstance = function () {\n  var _this = this;\n  debug('Creating fetch-mock instance');\n  var instance = Object.create(FetchMock);\n  instance._uncompiledRoutes = (this._uncompiledRoutes || []).slice();\n  instance.routes = instance._uncompiledRoutes.map(function (config) {\n    return _this.compileRoute(config);\n  });\n  instance.fallbackResponse = this.fallbackResponse || undefined;\n  instance.config = _objectSpread({}, this.config || FetchMock.config);\n  instance._calls = [];\n  instance._holdingPromises = [];\n  instance.bindMethods();\n  return instance;\n};\nFetchMock.compileRoute = function (config) {\n  return new Route(config, this);\n};\nFetchMock.bindMethods = function () {\n  this.fetchHandler = FetchMock.fetchHandler.bind(this);\n  this.reset = this.restore = FetchMock.reset.bind(this);\n  this.resetHistory = FetchMock.resetHistory.bind(this);\n  this.resetBehavior = FetchMock.resetBehavior.bind(this);\n};\nFetchMock.sandbox = function () {\n  debug('Creating sandboxed fetch-mock instance');\n  // this construct allows us to create a fetch-mock instance which is also\n  // a callable function, while circumventing circularity when defining the\n  // object that this function should be bound to\n  var fetchMockProxy = function fetchMockProxy(url, options) {\n    return sandbox.fetchHandler(url, options);\n  };\n  var sandbox = Object.assign(fetchMockProxy,\n  // Ensures that the entire returned object is a callable function\n  FetchMock,\n  // prototype methods\n  this.createInstance(),\n  // instance data\n  {\n    Headers: this.config.Headers,\n    Request: this.config.Request,\n    Response: this.config.Response\n  });\n  sandbox.bindMethods();\n  sandbox.isSandbox = true;\n  sandbox.default = sandbox;\n  return sandbox;\n};\nFetchMock.getOption = function (name) {\n  var route = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return name in route ? route[name] : this.config[name];\n};\nexport default FetchMock;","map":{"version":3,"names":["debug","setUpAndTearDown","fetchHandler","inspecting","Route","FetchMock","_objectSpread","addMatcher","matcher","config","fallbackToNetwork","includeContentLength","sendAsJson","warnOnFallback","overwriteRoutes","undefined","createInstance","_this","instance","Object","create","_uncompiledRoutes","slice","routes","map","compileRoute","fallbackResponse","_calls","_holdingPromises","bindMethods","bind","reset","restore","resetHistory","resetBehavior","sandbox","fetchMockProxy","url","options","assign","Headers","Request","Response","isSandbox","default","getOption","name","route","arguments","length"],"sources":["/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/node_modules/fetch-mock/src/lib/index.js"],"sourcesContent":["import { debug } from './debug.js';\nimport setUpAndTearDown from './set-up-and-tear-down.js';\nimport fetchHandler from './fetch-handler.js';\nimport inspecting from './inspecting.js';\nimport Route from '../Route/index.js';\n\nconst FetchMock = { ...fetchHandler, ...setUpAndTearDown, ...inspecting };\n\nFetchMock.addMatcher = function (matcher) {\n\tRoute.addMatcher(matcher);\n};\n\nFetchMock.config = {\n\tfallbackToNetwork: false,\n\tincludeContentLength: true,\n\tsendAsJson: true,\n\twarnOnFallback: true,\n\toverwriteRoutes: undefined,\n};\n\nFetchMock.createInstance = function () {\n\tdebug('Creating fetch-mock instance');\n\tconst instance = Object.create(FetchMock);\n\tinstance._uncompiledRoutes = (this._uncompiledRoutes || []).slice();\n\tinstance.routes = instance._uncompiledRoutes.map((config) =>\n\t\tthis.compileRoute(config),\n\t);\n\tinstance.fallbackResponse = this.fallbackResponse || undefined;\n\tinstance.config = { ...(this.config || FetchMock.config) };\n\tinstance._calls = [];\n\tinstance._holdingPromises = [];\n\tinstance.bindMethods();\n\treturn instance;\n};\n\nFetchMock.compileRoute = function (config) {\n\treturn new Route(config, this);\n};\n\nFetchMock.bindMethods = function () {\n\tthis.fetchHandler = FetchMock.fetchHandler.bind(this);\n\tthis.reset = this.restore = FetchMock.reset.bind(this);\n\tthis.resetHistory = FetchMock.resetHistory.bind(this);\n\tthis.resetBehavior = FetchMock.resetBehavior.bind(this);\n};\n\nFetchMock.sandbox = function () {\n\tdebug('Creating sandboxed fetch-mock instance');\n\t// this construct allows us to create a fetch-mock instance which is also\n\t// a callable function, while circumventing circularity when defining the\n\t// object that this function should be bound to\n\tconst fetchMockProxy = (url, options) => sandbox.fetchHandler(url, options);\n\n\tconst sandbox = Object.assign(\n\t\tfetchMockProxy, // Ensures that the entire returned object is a callable function\n\t\tFetchMock, // prototype methods\n\t\tthis.createInstance(), // instance data\n\t\t{\n\t\t\tHeaders: this.config.Headers,\n\t\t\tRequest: this.config.Request,\n\t\t\tResponse: this.config.Response,\n\t\t},\n\t);\n\n\tsandbox.bindMethods();\n\tsandbox.isSandbox = true;\n\tsandbox.default = sandbox;\n\treturn sandbox;\n};\n\nFetchMock.getOption = function (name, route = {}) {\n\treturn name in route ? route[name] : this.config[name];\n};\n\nexport default FetchMock;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}