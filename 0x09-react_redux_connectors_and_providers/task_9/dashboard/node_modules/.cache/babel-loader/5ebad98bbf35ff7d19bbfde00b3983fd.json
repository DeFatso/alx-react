{"ast":null,"code":"import { debug, setDebugPhase } from './debug.js';\nvar FetchMock = {};\nFetchMock.mock = function () {\n  setDebugPhase('setup');\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (args.length) {\n    this.addRoute(args);\n  }\n  return this._mock();\n};\nFetchMock.addRoute = function (uncompiledRoute) {\n  var _this = this;\n  debug('Adding route', uncompiledRoute);\n  var route = this.compileRoute(uncompiledRoute);\n  var clashes = this.routes.filter(function (_ref) {\n    var identifier = _ref.identifier,\n      method = _ref.method;\n    var isMatch = typeof identifier === 'function' ? identifier === route.identifier : String(identifier) === String(route.identifier);\n    return isMatch && (!method || !route.method || method === route.method);\n  });\n  if (this.getOption('overwriteRoutes', route) === false || !clashes.length) {\n    this._uncompiledRoutes.push(uncompiledRoute);\n    return this.routes.push(route);\n  }\n  if (this.getOption('overwriteRoutes', route) === true) {\n    clashes.forEach(function (clash) {\n      var index = _this.routes.indexOf(clash);\n      _this._uncompiledRoutes.splice(index, 1, uncompiledRoute);\n      _this.routes.splice(index, 1, route);\n    });\n    return this.routes;\n  }\n  if (clashes.length) {\n    throw new Error('fetch-mock: Adding route with same name or matcher as existing route. See `overwriteRoutes` option.');\n  }\n  this._uncompiledRoutes.push(uncompiledRoute);\n  this.routes.push(route);\n};\nFetchMock._mock = function () {\n  if (!this.isSandbox) {\n    // Do this here rather than in the constructor to ensure it's scoped to the test\n    this.realFetch = this.realFetch || globalThis.fetch;\n    globalThis.fetch = this.fetchHandler;\n  }\n  setDebugPhase();\n  return this;\n};\nFetchMock.catch = function (response) {\n  if (this.fallbackResponse) {\n    console.warn('calling fetchMock.catch() twice - are you sure you want to overwrite the previous fallback response'); // eslint-disable-line\n  }\n  this.fallbackResponse = response || 'ok';\n  return this._mock();\n};\nFetchMock.spy = function (route) {\n  // even though ._mock() is called by .mock() and .catch() we still need to\n  // call it here otherwise .getNativeFetch() won't be able to use the reference\n  // to .realFetch that ._mock() sets up\n  this._mock();\n  return route ? this.mock(route, this.getNativeFetch()) : this.catch(this.getNativeFetch());\n};\nvar defineShorthand = function defineShorthand(methodName, underlyingMethod, shorthandOptions) {\n  FetchMock[methodName] = function (matcher, response, options) {\n    return this[underlyingMethod](matcher, response, Object.assign(options || {}, shorthandOptions));\n  };\n};\nvar defineGreedyShorthand = function defineGreedyShorthand(methodName, underlyingMethod) {\n  FetchMock[methodName] = function (response, options) {\n    return this[underlyingMethod]({}, response, options);\n  };\n};\ndefineShorthand('sticky', 'mock', {\n  sticky: true\n});\ndefineShorthand('once', 'mock', {\n  repeat: 1\n});\ndefineGreedyShorthand('any', 'mock');\ndefineGreedyShorthand('anyOnce', 'once');\n['get', 'post', 'put', 'delete', 'head', 'patch'].forEach(function (method) {\n  defineShorthand(method, 'mock', {\n    method: method\n  });\n  defineShorthand(\"\".concat(method, \"Once\"), 'once', {\n    method: method\n  });\n  defineGreedyShorthand(\"\".concat(method, \"Any\"), method);\n  defineGreedyShorthand(\"\".concat(method, \"AnyOnce\"), \"\".concat(method, \"Once\"));\n});\nvar getRouteRemover = function getRouteRemover(_ref2) {\n  var removeStickyRoutes = _ref2.sticky;\n  return function (routes) {\n    return removeStickyRoutes ? [] : routes.filter(function (_ref3) {\n      var sticky = _ref3.sticky;\n      return sticky;\n    });\n  };\n};\nFetchMock.resetBehavior = function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var removeRoutes = getRouteRemover(options);\n  this.routes = removeRoutes(this.routes);\n  this._uncompiledRoutes = removeRoutes(this._uncompiledRoutes);\n  if (this.realFetch && !this.routes.length) {\n    globalThis.fetch = this.realFetch;\n    this.realFetch = undefined;\n  }\n  this.fallbackResponse = undefined;\n  return this;\n};\nFetchMock.resetHistory = function () {\n  this._calls = [];\n  this._holdingPromises = [];\n  this.routes.forEach(function (route) {\n    return route.reset && route.reset();\n  });\n  return this;\n};\nFetchMock.restore = FetchMock.reset = function (options) {\n  this.resetBehavior(options);\n  this.resetHistory();\n  return this;\n};\nexport default FetchMock;","map":{"version":3,"names":["debug","setDebugPhase","FetchMock","mock","_len","arguments","length","args","Array","_key","addRoute","_mock","uncompiledRoute","_this","route","compileRoute","clashes","routes","filter","_ref","identifier","method","isMatch","String","getOption","_uncompiledRoutes","push","forEach","clash","index","indexOf","splice","Error","isSandbox","realFetch","globalThis","fetch","fetchHandler","catch","response","fallbackResponse","console","warn","spy","getNativeFetch","defineShorthand","methodName","underlyingMethod","shorthandOptions","matcher","options","Object","assign","defineGreedyShorthand","sticky","repeat","concat","getRouteRemover","_ref2","removeStickyRoutes","_ref3","resetBehavior","undefined","removeRoutes","resetHistory","_calls","_holdingPromises","reset","restore"],"sources":["/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x09-react_redux_connectors_and_providers/task_3/dashboard/node_modules/fetch-mock/src/lib/set-up-and-tear-down.js"],"sourcesContent":["import { debug, setDebugPhase } from './debug.js';\n\nconst FetchMock = {};\n\nFetchMock.mock = function (...args) {\n\tsetDebugPhase('setup');\n\tif (args.length) {\n\t\tthis.addRoute(args);\n\t}\n\n\treturn this._mock();\n};\n\nFetchMock.addRoute = function (uncompiledRoute) {\n\tdebug('Adding route', uncompiledRoute);\n\tconst route = this.compileRoute(uncompiledRoute);\n\tconst clashes = this.routes.filter(({ identifier, method }) => {\n\t\tconst isMatch =\n\t\t\ttypeof identifier === 'function'\n\t\t\t\t? identifier === route.identifier\n\t\t\t\t: String(identifier) === String(route.identifier);\n\t\treturn isMatch && (!method || !route.method || method === route.method);\n\t});\n\n\tif (this.getOption('overwriteRoutes', route) === false || !clashes.length) {\n\t\tthis._uncompiledRoutes.push(uncompiledRoute);\n\t\treturn this.routes.push(route);\n\t}\n\n\tif (this.getOption('overwriteRoutes', route) === true) {\n\t\tclashes.forEach((clash) => {\n\t\t\tconst index = this.routes.indexOf(clash);\n\t\t\tthis._uncompiledRoutes.splice(index, 1, uncompiledRoute);\n\t\t\tthis.routes.splice(index, 1, route);\n\t\t});\n\t\treturn this.routes;\n\t}\n\n\tif (clashes.length) {\n\t\tthrow new Error(\n\t\t\t'fetch-mock: Adding route with same name or matcher as existing route. See `overwriteRoutes` option.',\n\t\t);\n\t}\n\n\tthis._uncompiledRoutes.push(uncompiledRoute);\n\tthis.routes.push(route);\n};\n\nFetchMock._mock = function () {\n\tif (!this.isSandbox) {\n\t\t// Do this here rather than in the constructor to ensure it's scoped to the test\n\t\tthis.realFetch = this.realFetch || globalThis.fetch;\n\t\tglobalThis.fetch = this.fetchHandler;\n\t}\n\tsetDebugPhase();\n\treturn this;\n};\n\nFetchMock.catch = function (response) {\n\tif (this.fallbackResponse) {\n\t\tconsole.warn(\n\t\t\t'calling fetchMock.catch() twice - are you sure you want to overwrite the previous fallback response',\n\t\t); // eslint-disable-line\n\t}\n\tthis.fallbackResponse = response || 'ok';\n\treturn this._mock();\n};\n\nFetchMock.spy = function (route) {\n\t// even though ._mock() is called by .mock() and .catch() we still need to\n\t// call it here otherwise .getNativeFetch() won't be able to use the reference\n\t// to .realFetch that ._mock() sets up\n\tthis._mock();\n\treturn route\n\t\t? this.mock(route, this.getNativeFetch())\n\t\t: this.catch(this.getNativeFetch());\n};\n\nconst defineShorthand = (methodName, underlyingMethod, shorthandOptions) => {\n\tFetchMock[methodName] = function (matcher, response, options) {\n\t\treturn this[underlyingMethod](\n\t\t\tmatcher,\n\t\t\tresponse,\n\t\t\tObject.assign(options || {}, shorthandOptions),\n\t\t);\n\t};\n};\n\nconst defineGreedyShorthand = (methodName, underlyingMethod) => {\n\tFetchMock[methodName] = function (response, options) {\n\t\treturn this[underlyingMethod]({}, response, options);\n\t};\n};\n\ndefineShorthand('sticky', 'mock', { sticky: true });\ndefineShorthand('once', 'mock', { repeat: 1 });\ndefineGreedyShorthand('any', 'mock');\ndefineGreedyShorthand('anyOnce', 'once');\n\n['get', 'post', 'put', 'delete', 'head', 'patch'].forEach((method) => {\n\tdefineShorthand(method, 'mock', { method });\n\tdefineShorthand(`${method}Once`, 'once', { method });\n\tdefineGreedyShorthand(`${method}Any`, method);\n\tdefineGreedyShorthand(`${method}AnyOnce`, `${method}Once`);\n});\n\nconst getRouteRemover =\n\t({ sticky: removeStickyRoutes }) =>\n\t(routes) =>\n\t\tremoveStickyRoutes ? [] : routes.filter(({ sticky }) => sticky);\n\nFetchMock.resetBehavior = function (options = {}) {\n\tconst removeRoutes = getRouteRemover(options);\n\n\tthis.routes = removeRoutes(this.routes);\n\tthis._uncompiledRoutes = removeRoutes(this._uncompiledRoutes);\n\n\tif (this.realFetch && !this.routes.length) {\n\t\tglobalThis.fetch = this.realFetch;\n\t\tthis.realFetch = undefined;\n\t}\n\n\tthis.fallbackResponse = undefined;\n\treturn this;\n};\n\nFetchMock.resetHistory = function () {\n\tthis._calls = [];\n\tthis._holdingPromises = [];\n\tthis.routes.forEach((route) => route.reset && route.reset());\n\treturn this;\n};\n\nFetchMock.restore = FetchMock.reset = function (options) {\n\tthis.resetBehavior(options);\n\tthis.resetHistory();\n\treturn this;\n};\n\nexport default FetchMock;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}