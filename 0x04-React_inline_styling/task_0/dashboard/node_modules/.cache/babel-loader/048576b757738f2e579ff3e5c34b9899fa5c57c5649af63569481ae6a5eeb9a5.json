{"ast":null,"code":"var _jsxFileName = \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x03-React_component/task_0/dashboard/src/Notifications/Notifications.js\";\nimport React from 'react';\nimport close_icon from '../assets/close-icon.png';\nimport { getLatestNotification } from '../utils/utils';\nimport NotificationItem from './NotificationItem';\nimport NotificationItemShape from './NotificationItemShape';\nimport propTypes from 'prop-types';\nimport './Notifications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  displayDrawer,\n  listNotifications\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItem\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          background: 'transparent',\n          border: 'none',\n          right: '20px'\n        },\n        \"aria-label\": \"close\",\n        onClick: () => {\n          console.log('Close button has been clicked');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: close_icon,\n          alt: \"close\",\n          height: \"15px\",\n          width: \"15px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here is the list of notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [listNotifications.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No notification available yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 8\n        }, this), listNotifications.map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n          id: notification.id,\n          html: notification.html,\n          type: notification.type,\n          value: notification.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 8\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = Notification;\nNotification.defaultProps = {\n  displayDrawer: false\n};\nNotification.propTypes = {\n  displayDrawer: propTypes.bool\n};\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","close_icon","getLatestNotification","NotificationItem","NotificationItemShape","propTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","displayDrawer","listNotifications","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","position","background","border","right","onClick","console","log","src","alt","height","width","length","map","notification","id","html","type","value","_c","defaultProps","bool","$RefreshReg$"],"sources":["/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x03-React_component/task_0/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React from 'react'\nimport close_icon from '../assets/close-icon.png'\nimport { getLatestNotification } from '../utils/utils'\nimport NotificationItem from './NotificationItem'\nimport NotificationItemShape from './NotificationItemShape'\nimport propTypes from 'prop-types'\n\nimport './Notifications.css'\n\nconst Notification = ({ displayDrawer, listNotifications }) => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"menuItem\">\n\t\t\t\t<p>Your notifications</p>\n\t\t\t</div>\n\t\t\t{displayDrawer && (\n\t\t\t\t<div className=\"Notifications\">\n\t\t\t\t\t<button style={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tbackground: 'transparent',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\tright: '20px',\n\t\t\t\t\t}}\n\t\t\t\t\t\taria-label='close'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconsole.log('Close button has been clicked');\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={close_icon} alt=\"close\" height=\"15px\" width=\"15px\"></img>\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>Here is the list of notifications</p>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{/* listNotifications is empty condition */}\n\t\t\t\t\t\t{listNotifications.length === 0 && (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<p>No notification available yet</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* render listNotifications */}\n\t\t\t\t\t\t{listNotifications.map(notification => (\n\t\t\t\t\t\t\t<NotificationItem id={notification.id} html={notification.html} type={notification.type} value={notification.value} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\n\nNotification.defaultProps = {\n\tdisplayDrawer: false\n}\n\nNotification.propTypes = {\n\tdisplayDrawer: propTypes.bool\n}\n\nexport default Notification"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,qBAAqB,QAAQ,gBAAgB;AACtD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAkB,CAAC,KAAK;EAC9D,oBACCL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACCN,OAAA;MAAKO,SAAS,EAAC,UAAU;MAAAD,QAAA,eACxBN,OAAA;QAAAM,QAAA,EAAG;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACLP,aAAa,iBACbJ,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC7BN,OAAA;QAAQY,KAAK,EAAE;UACdC,QAAQ,EAAE,UAAU;UACpBC,UAAU,EAAE,aAAa;UACzBC,MAAM,EAAE,MAAM;UACdC,KAAK,EAAE;QACR,CAAE;QACD,cAAW,OAAO;QAClBC,OAAO,EAAEA,CAAA,KAAM;UACdC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC7C,CAAE;QAAAb,QAAA,eACFN,OAAA;UAAKoB,GAAG,EAAE1B,UAAW;UAAC2B,GAAG,EAAC,OAAO;UAACC,MAAM,EAAC,MAAM;UAACC,KAAK,EAAC;QAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACTX,OAAA;QAAAM,QAAA,EAAG;MAAiC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxCX,OAAA;QAAAM,QAAA,GAEED,iBAAiB,CAACmB,MAAM,KAAK,CAAC,iBAC9BxB,OAAA;UAAAM,QAAA,eACCN,OAAA;YAAAM,QAAA,EAAG;UAA6B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CACJ,EAEAN,iBAAiB,CAACoB,GAAG,CAACC,YAAY,iBAClC1B,OAAA,CAACJ,gBAAgB;UAAC+B,EAAE,EAAED,YAAY,CAACC,EAAG;UAACC,IAAI,EAAEF,YAAY,CAACE,IAAK;UAACC,IAAI,EAAEH,YAAY,CAACG,IAAK;UAACC,KAAK,EAAEJ,YAAY,CAACI;QAAM;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACrH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACL;EAAA,eACA,CAAC;AAEL,CAAC;AAAAoB,EAAA,GArCK5B,YAAY;AAwClBA,YAAY,CAAC6B,YAAY,GAAG;EAC3B5B,aAAa,EAAE;AAChB,CAAC;AAEDD,YAAY,CAACL,SAAS,GAAG;EACxBM,aAAa,EAAEN,SAAS,CAACmC;AAC1B,CAAC;AAED,eAAe9B,YAAY;AAAA,IAAA4B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}