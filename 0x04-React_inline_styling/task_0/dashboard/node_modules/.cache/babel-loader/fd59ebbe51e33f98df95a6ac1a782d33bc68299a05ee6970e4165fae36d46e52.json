{"ast":null,"code":"var _jsxFileName = \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x04-React_inline_styling/task_0/dashboard/src/Notifications/Notifications.js\";\nimport React, { Component } from 'react';\nimport close_icon from '../assets/close-icon.png';\nimport { getLatestNotification } from '../utils/utils';\nimport NotificationItem from './NotificationItem';\nimport NotificationItemShape from './NotificationItemShape';\nimport PropTypes from 'prop-types';\nimport './Notifications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Notifications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: this.props.listNotifications\n    };\n  }\n  markAsRead(id) {\n    console.log(`Notification ${id} has been marked as read`);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only update if the length of the new listNotifications array is longer\n    return nextProps.listNotifications.length > this.props.listNotifications.length;\n  }\n  render() {\n    const {\n      displayDrawer\n    } = this.props;\n    const {\n      notifications\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItem\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Notifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: 'absolute',\n            background: 'transparent',\n            border: 'none',\n            right: '20px'\n          },\n          \"aria-label\": \"close\",\n          onClick: () => {\n            console.log('Close button has been clicked');\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close_icon,\n            alt: \"close\",\n            height: \"15px\",\n            width: \"15px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here is the list of notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [notifications.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No notification available yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            id: notification.id,\n            html: notification.html,\n            type: notification.type,\n            value: notification.value,\n            markAsRead: this.markAsRead\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n}\nNotifications.defaultProps = {\n  displayDrawer: false\n};\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape)\n};\nexport default Notifications;","map":{"version":3,"names":["React","Component","close_icon","getLatestNotification","NotificationItem","NotificationItemShape","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","constructor","props","state","notifications","listNotifications","markAsRead","id","console","log","shouldComponentUpdate","nextProps","nextState","length","render","displayDrawer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","position","background","border","right","onClick","src","alt","height","width","map","notification","html","type","value","defaultProps","propTypes","bool","arrayOf"],"sources":["/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x04-React_inline_styling/task_0/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React, { Component } from 'react';\nimport close_icon from '../assets/close-icon.png';\nimport { getLatestNotification } from '../utils/utils';\nimport NotificationItem from './NotificationItem';\nimport NotificationItemShape from './NotificationItemShape';\nimport PropTypes from 'prop-types';\n\nimport './Notifications.css';\n\nclass Notifications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: this.props.listNotifications,\n    };\n  }\n\n  markAsRead(id) {\n    console.log(`Notification ${id} has been marked as read`);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only update if the length of the new listNotifications array is longer\n    return nextProps.listNotifications.length > this.props.listNotifications.length;\n  }\n\n  render() {\n    const { displayDrawer } = this.props;\n    const { notifications } = this.state;\n    return (\n      <>\n        <div className=\"menuItem\">\n          <p>Your notifications</p>\n        </div>\n        {displayDrawer && (\n          <div className=\"Notifications\">\n            <button\n              style={{\n                position: 'absolute',\n                background: 'transparent',\n                border: 'none',\n                right: '20px',\n              }}\n              aria-label=\"close\"\n              onClick={() => {\n                console.log('Close button has been clicked');\n              }}\n            >\n              <img src={close_icon} alt=\"close\" height=\"15px\" width=\"15px\"></img>\n            </button>\n            <p>Here is the list of notifications</p>\n            <ul>\n              {/* listNotifications is empty condition */}\n              {notifications.length === 0 && (\n                <li>\n                  <p>No notification available yet</p>\n                </li>\n              )}\n              {/* render listNotifications */}\n              {notifications.map((notification) => (\n                <NotificationItem\n                  key={notification.id}\n                  id={notification.id}\n                  html={notification.html}\n                  type={notification.type}\n                  value={notification.value}\n                  markAsRead={this.markAsRead}\n                />\n              ))}\n            </ul>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nNotifications.defaultProps = {\n  displayDrawer: false,\n};\n\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape),\n};\n\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}