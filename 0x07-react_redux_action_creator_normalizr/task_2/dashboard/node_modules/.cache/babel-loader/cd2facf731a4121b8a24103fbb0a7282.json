{"ast":null,"code":"import _classCallCheck from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x05-react_state/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x05-react_state/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x05-react_state/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x05-react_state/task_3/dashboard/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x05-react_state/task_3/dashboard/src/Notifications/Notifications.js\";\nimport React, { Component } from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport close_icon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport NotificationItemShape from './NotificationItemShape';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Notifications = /*#__PURE__*/function (_Component) {\n  _inherits(Notifications, _Component);\n  var _super = _createSuper(Notifications);\n  function Notifications() {\n    _classCallCheck(this, Notifications);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Notifications, [{\n    key: \"markAsRead\",\n    value:\n    // function that logs notification id to console\n    function markAsRead(id) {\n      console.log(\"Notification \".concat(id, \" has been read\"));\n    }\n\n    // function that makes the file only update when next listNotifications is longer than current\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.listNotifications.length > this.props.listNotifications.length;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      // assign props to local variables\n      var _this$props = this.props,\n        listNotifications = _this$props.listNotifications,\n        displayDrawer = _this$props.displayDrawer,\n        handleDisplayDrawer = _this$props.handleDisplayDrawer,\n        handleHideDrawer = _this$props.handleHideDrawer;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(notificationStyles.pDiv),\n          onClick: handleDisplayDrawer,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: css(animationStyle.animation),\n            children: \"Your notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(notificationStyles.notifications),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: 'absolute',\n              background: 'transparent',\n              border: 'none',\n              right: '20px'\n            },\n            \"aria-label\": \"close\",\n            onClick: handleHideDrawer,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: close_icon,\n              className: css(notificationStyles.x_button),\n              alt: \"close\",\n              height: \"15px\",\n              width: \"15px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Here is the list of notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [listNotifications.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No notification available yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), listNotifications.map(function (notification) {\n              return /*#__PURE__*/_jsxDEV(NotificationItem, {\n                type: notification.type,\n                value: notification.value,\n                html: notification.html,\n                markAsRead: _this.markAsRead,\n                id: notification.id\n              }, notification.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n  return Notifications;\n}(Component);\nvar notificationStyles = StyleSheet.create({\n  notifications: {\n    '@media (min-width: 350px)': {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      width: '100%',\n      height: '100%',\n      background: 'white',\n      fontSize: '20px'\n    }\n  },\n  x_button: {\n    '@media (min-width: 350px)': {\n      position: 'absolute',\n      top: '15px',\n      right: '10px'\n    }\n  },\n  pDiv: {\n    position: 'absolute',\n    top: \"0px\",\n    right: \"15px\",\n    backgroundColor: '#fff8f8',\n    cursor: 'pointer'\n  }\n});\nvar opacityAnimation = {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n};\nvar translateYAnimation = {\n  '0%': {\n    transform: 'translateY(0px)'\n  },\n  '50%': {\n    transform: 'translateY(-10px)'\n  }\n};\nvar animationStyle = StyleSheet.create({\n  animation: {\n    animationName: [opacityAnimation, translateYAnimation],\n    animationDuration: '3s, 1200ms',\n    animationIterationCount: '1, 3'\n  }\n});\nNotifications.defaultProps = {\n  displayDrawer: false,\n  listNotifications: [],\n  handleDisplayDrawer: function handleDisplayDrawer() {},\n  handleHideDrawer: function handleHideDrawer() {}\n};\nNotifications.propTypes = {\n  displayDrawer: propTypes.bool,\n  listNotifications: propTypes.arrayOf(NotificationItemShape),\n  handleDisplayDrawer: propTypes.func.isRequired,\n  handleHideDrawer: propTypes.func.isRequired\n};\nexport default Notifications;","map":{"version":3,"names":["React","Component","StyleSheet","css","close_icon","NotificationItem","NotificationItemShape","propTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","markAsRead","id","console","log","concat","shouldComponentUpdate","nextProps","listNotifications","length","props","render","_this","_this$props","displayDrawer","handleDisplayDrawer","handleHideDrawer","children","className","notificationStyles","pDiv","onClick","animationStyle","animation","fileName","_jsxFileName","lineNumber","columnNumber","notifications","style","position","background","border","right","src","x_button","alt","height","width","map","notification","type","html","create","top","left","fontSize","backgroundColor","cursor","opacityAnimation","opacity","translateYAnimation","transform","animationName","animationDuration","animationIterationCount","defaultProps","bool","arrayOf","func","isRequired"],"sources":["/Users/freethinking/Desktop/codecademy/PetPhysique_Pro/alx-react/0x05-react_state/task_3/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport close_icon from '../assets/close-icon.png'\nimport NotificationItem from './NotificationItem'\nimport NotificationItemShape from './NotificationItemShape'\nimport propTypes from 'prop-types'\n\nclass Notifications extends Component {\n  // function that logs notification id to console\n  markAsRead(id) {\n    console.log(`Notification ${id} has been read`);\n  }\n\n  // function that makes the file only update when next listNotifications is longer than current\n  shouldComponentUpdate(nextProps) {\n    return nextProps.listNotifications.length > this.props.listNotifications.length;\n  }\n\n  render() {\n    // assign props to local variables\n    const { listNotifications, displayDrawer, handleDisplayDrawer, handleHideDrawer } = this.props;\n\n    return (\n      <>\n        <div className={css(notificationStyles.pDiv)} onClick={handleDisplayDrawer}>\n          <p className={css(animationStyle.animation)}>Your notifications</p>\n        </div>\n        {displayDrawer && (\n          <div className={css(notificationStyles.notifications)}>\n            <button style={{\n              position: 'absolute',\n              background: 'transparent',\n              border: 'none',\n              right: '20px',\n            }}\n              aria-label='close'\n              onClick={handleHideDrawer}>\n              <img src={close_icon} className={css(notificationStyles.x_button)} alt=\"close\" height=\"15px\" width=\"15px\"></img>\n            </button>\n            <p>Here is the list of notifications</p>\n            <ul>\n              {/* listNotifications is empty condition */}\n              {listNotifications.length === 0 && (\n                <li>\n                  <p>No notification available yet</p>\n                </li>\n              )}\n              {/* render listNotifications */}\n              {listNotifications.map(notification => (\n                <NotificationItem key={notification.id} type={notification.type} value={notification.value} html={notification.html} markAsRead={this.markAsRead} id={notification.id} />\n              ))}\n            </ul>\n          </div>\n        )}\n      </>\n    )\n  }\n}\n\nconst notificationStyles = StyleSheet.create({\n  notifications: {\n    '@media (min-width: 350px)': {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      width: '100%',\n      height: '100%',\n      background: 'white',\n      fontSize: '20px',\n    }\n  },\n\n  x_button: {\n    '@media (min-width: 350px)': {\n      position: 'absolute',\n      top: '15px',\n      right: '10px',\n    }\n  },\n\n  pDiv: {\n    position: 'absolute',\n    top: `0px`,\n    right: `15px`,\n    backgroundColor: '#fff8f8',\n    cursor: 'pointer',\n  },\n})\n\nconst opacityAnimation = {\n  '0%': { opacity: 0 },\n  '100%': { opacity: 1 },\n}\n\nconst translateYAnimation = {\n  '0%': { transform: 'translateY(0px)' },\n  '50%': { transform: 'translateY(-10px)' },\n}\n\nconst animationStyle = StyleSheet.create({\n  animation: {\n    animationName: [opacityAnimation, translateYAnimation],\n    animationDuration: '3s, 1200ms',\n    animationIterationCount: '1, 3'\n  }\n})\n\nNotifications.defaultProps = {\n  displayDrawer: false,\n  listNotifications: [],\n  handleDisplayDrawer: () => {},\n  handleHideDrawer: () => {},\n}\n\nNotifications.propTypes = {\n  displayDrawer: propTypes.bool,\n  listNotifications: propTypes.arrayOf(NotificationItemShape),\n  handleDisplayDrawer: propTypes.func.isRequired,\n  handleHideDrawer: propTypes.func.isRequired,\n}\n\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}